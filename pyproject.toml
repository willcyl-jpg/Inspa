[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "inspa"
version = "0.2.0"
description = "Windows 单文件自解压安装器构建与运行系统"
authors = [
    {name = "Project Team", email = "team@inspa.dev"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["installer", "packaging", "windows", "self-extracting"]

dependencies = [
    "pydantic>=2.5.0",
    "ruamel.yaml>=0.18.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "zstandard>=0.22.0",
    "structlog>=23.2.0",
    "customtkinter>=5.2.0",
    "pillow>=10.0.0",
    "colorama>=0.4.6",
    "pyinstaller>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]
build = [
    "upx-windows-amd64>=4.2.1",
]

[project.urls]
"Homepage" = "https://github.com/willcyl-jpg/Inspa"
"Bug Reports" = "https://github.com/willcyl-jpg/Inspa/issues"
"Source" = "https://github.com/willcyl-jpg/Inspa"

[project.scripts]
inspa = "inspa.cli.main:app"

[tool.setuptools]
packages = ["inspa"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["inspa"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]